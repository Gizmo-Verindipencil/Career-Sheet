import{createInstance}from"../keyword/create-instance.min.js";import{Buildable}from"../interface/buildable.min.js";import{TaskTypeListModel}from"../model/task-type-list-model.min.js";import{Utility}from"../shared/utility.min.js";import{PageColorAdjuster}from"../shared/page-color-adjuster.min.js";import ScriptSeriesLoader from"../shared/script-series-loader.min.js";import StylesheetSeriesLoader from"../shared/stylesheet-series-loader.min.js";class TaskTypeListController extends Buildable{constructor(){super(),this.model=new TaskTypeListModel,this.scriptLoader=ScriptSeriesLoader,this.scriptLoader.add("https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"),this.scriptLoader.load(),this.stylesheetLoader=StylesheetSeriesLoader,this.stylesheetLoader.add("css/destyle.min.css"),this.stylesheetLoader.add("css/restyle.min.css"),this.stylesheetLoader.add("css/common.min.css"),this.stylesheetLoader.add("css/task-type-list.min.css"),this.stylesheetLoader.load()}static build=async()=>{const e=new TaskTypeListController;for(;e.scriptLoader.running||e.stylesheetLoader.running;)await Utility.sleep(2e3);return e};execute=async()=>{const e=this.model.getTaskTypes();e.sort(((e,s)=>e.sort>s.sort?1:e.sort<s.sort?-1:0));for(const s of e){const e=this.model.getTaskThemeById(s.themeId),t=(e,s)=>`style='color:${e};background-color:${s};'`;let r="";r=e?t(e.foreColor,e.backgroundColor):t("#cecece","#ffffff");const o=`<div class='task-type-list-task-wrapper'>${`<p class='task-type-list-task-symbol' ${r}>${s.id}</p>`}${`<p class='task-type-list-task-description'>${s.name.ja}</p>`}</div>`;$("#task-type-list").append(o)}(await createInstance(PageColorAdjuster)).changeBackgroundColor()}}export{TaskTypeListController};