import{WorkingHoursRepository}from"../../repository/working-hours-repository.min.js";import{MathUtility}from"../../shared/utility/math-utility.min.js";class WorkingHoursGraphModel{constructor(){const r=new WorkingHoursRepository;this.records=r.getAll()}getValues=r=>{const t=[];for(const e of this.records)t.push({yearMonth:`${e.year}-${e.month}`,value:e[r]});return t};getActual=()=>this.getValues("actualWorkingHours");getPrescribed=()=>this.getValues("prescribedWorkingHours");getEMA=r=>{const t=MathUtility.calculateEMA(this.records.map((t=>t[r])),12),e=[];for(let r=0;r<this.records.length;r++)e.push({yearMonth:`${this.records[r].year}-${this.records[r].month}`,value:t[r]});return e};getActualEMA=()=>this.getEMA("actualWorkingHours");getPrescribedEMA=()=>this.getEMA("prescribedWorkingHours");getAverage=r=>{const t=MathUtility.calculateAverage(this.records.map((t=>t[r]))),e=[];for(const r of this.records)e.push({yearMonth:`${r.year}-${r.month}`,value:t});return e};getActualAverage=()=>this.getAverage("actualWorkingHours");getPrescribedAverage=()=>this.getAverage("prescribedWorkingHours")}export{WorkingHoursGraphModel};