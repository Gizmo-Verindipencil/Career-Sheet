class SeasonReminder{constructor(e){this._today=e||new Date,this._date=this._getDefaultSeasonDate(),this._color=this._getDefaultSeasonColor(),this.seasonEffect=10,this.maxNumberOfReminding=1}_getDefaultSeasonDate=()=>{const e=new Object;e.spring=new Date(this._today.getFullYear()+"/3/21"),e.summer=new Date(this._today.getFullYear()+"/6/22"),e.autumn=new Date(this._today.getFullYear()+"/9/23"),e.winter=new Date(this._today.getFullYear()+"/12/22");const t=new Date(e.winter.getTime());t.setFullYear(t.getFullYear()-1),e.lastWinter=t;const r=new Date(e.spring.getTime());return r.setFullYear(r.getFullYear()+1),e.nextSpring=r,e};_getDefaultSeasonColor=()=>{const e=new Object;return e.spring="rgb(124, 252, 0)",e.summer="rgb(255, 99, 71)",e.autumn="rgb(210, 105, 30)",e.winter="rgb(176, 224, 230)",e.lastWinter=e.winter,e.nextSpring=e.spring,e};_getDayDifference=(e,t)=>Math.abs(Math.ceil((e-t)/864e5));_getSeasonDegrees=()=>{const e=[];for(var t in this._date)e.push({name:t,degree:this._getDayDifference(this._today,this._date[t])});for(e.sort(((e,t)=>e.degree-t.degree));e.length>2;)e.pop();const r=e[0].degree+e[1].degree;return e[0].degree=Math.round(e[0].degree/r*100),e[1].degree=Math.round(e[1].degree/r*100),e};_isRGB=e=>{const t=e.match(/\d+/g);return!(!t||3!==t.length||!e.toLowerCase().startsWith("rgb"))};_isRGBA=e=>{const t=e.match(/\d+/g);return!(!t||4!==t.length&&5!==t.length||!e.toLowerCase().startsWith("rgba"))};_isHexCode=e=>!(!e.startsWith("#")||4!==e.length&&7!==e.length);_createRGB=e=>`rgb(${e.join(",")})`;_createRGBA=(e,t)=>`rgba(${e.join(",")},${t})`;_createHexCode=e=>`#${e.map((e=>e.toString(16))).join("")}`;_getRGBfromHexCode=e=>{if(e.startsWith("#")&&(e=e.slice(1)),3===e.length){const t=e.slice(0,1)+e.slice(0,1),r=e.slice(1,2)+e.slice(1,2),s=e.slice(2,3)+e.slice(2,3);e=t+r+s}const t=[e.slice(0,2),e.slice(2,4),e.slice(4,6)].map((e=>parseInt(e,16)));if(t.some((e=>Number.isNaN(e))))throw"Error: invalid hex code.";return t};getRemindedColor=e=>{const t=this._isHexCode(e),r=this._isRGB(e),s=this._isRGBA(e);let n;if(t?n=this._getRGBfromHexCode(e):(r||s)&&(n=e.match(/\d+/g)),!n)throw"Error: only color expressions such as 'rgb(0, 1, 2)' and 'rgba(0, 1, 2, 3)' and '#000102' are accepted.";const i=this._getSeasonDegrees(),a=this._color[i[0].name].match(/\d+/g),o=this._color[i[1].name].match(/\d+/g),l=[];for(let e=0;e<3;e++){const t=Number(o[e])-Number(a[e]),r=Number(a[e])+Math.round(t*(i[0].degree/100));l.push(r)}const g=[];for(let e=0;e<3;e++){const t=l[e]-Number(n[e]);let r=Number(n[e])+Math.round(t*(this.seasonEffect/100));r=r<0?0:r>255?255:r,g.push(r)}if(t)return this._createHexCode(g);switch(n.length){case 3:return this._createRGB(g);case 4:case 5:let e=n[3];return n[4]&&(e+="."+n[4]),this._createRGBA(g,e)}};remind=(e,t)=>{const r="numberOfReminding";if(e.dataset[r]&&e.dataset[r]>=this.maxNumberOfReminding)return;let s;if(s=s||window.getComputedStyle(e,""),s=s||e.currentStyle,s=s||document.defaultView.getComputedStyle(e,""),s[t]&&"rgba(0, 0, 0, 0)"!==s[t])try{const n=this.getRemindedColor(s[t]);e.style[t]=n||s[t],e.dataset[r]=1}catch{}};remindChildren=(e,t,r,s)=>{if(!e.children)return;const n=Array.from(e.children);for(let e=0;e<n.length;e++){const i=n[e];r&&!r.some((e=>e.isEqualNode(i)))&&(this.remind(i,t),s&&this.remindChildren(i,t,r,!0))}};remindAll=function(e,t=[]){const r=document.getElementsByTagName("*");for(let s=0;s<r.length;s++)t.some((e=>e.isEqualNode(r[s])))||this.remind(r[s],e)}}export{SeasonReminder};